name: Product Catalog CI
on:
  pull_request:
    branches:
      - main

jobs:
    code-quality-check:
      runs-on: ubuntu-latest

      steps:
        - name: code-checkout
          uses: actions/checkout@v4

        - name: setup go
          uses: actions/setup-go@v4
          with:
            go-version: 1.22
            cache: true
            cache-dependency-path: src/product-catalog/go.mod

        - name: Run unit tests and coverage
          run: |
            cd src/product-catalog
            go mod download
            go vet ./...
            go test -v ./...
            go test -coverprofile=coverage.out ./...
            go tool cover -html=coverage.out -o coverage.html

        - name: Run golangci-lint
          uses: golangci/golangci-lint-action@v6
          with:
            version: v1.55.2
            run: golangci-lint run
            working-directory: src/product-catalog
        
        - name: Static Analysis with gosec
          run: |
            go install github.com/securego/gosec/v2/cmd/gosec@latest
            gosec -fmt=html -out=gosec-report.html ./...    
            gosec -fmt=json -out=gosec-report.json ./...
        
        - name: Dependency scan (OSV)
          run: |
            go install github.com/osv-scanner/osv-scanner/cmd/osv-scanner@latest
            osv-scanner --output=json > osv-report.json
            osv-scanner --output=html > osv-report.html

        - name: Upload OSV report
          uses: actions/upload-artifact@v4
          with:
            name: osv-report
            path: |
              src/product-catalog/osv-report.json
              src/product-catalog/osv-report.html
            retention-days: 1

        - name: Upload gosec report
          uses: actions/upload-artifact@v4
          with:
            name: gosec-report
            path: |
              src/product-catalog/gosec-report.json
              src/product-catalog/gosec-report.html
            retention-days: 1

        - name: Upload coverage report
          uses: actions/upload-artifact@v4
          with:
            name: coverage-report
            path: |
              src/product-catalog/coverage.html
              src/product-catalog/coverage.out   
            retention-days: 1
         
        - name: Upload golangci-lint report
          uses: actions/upload-artifact@v4
          with:
            name: golangci-lint-report
            path: src/product-catalog/golangci-lint-report.*
            retention-days: 1
        
    build:
      runs-on: ubuntu-latest

      steps:
        - name: code-checkout
          uses: actions/checkout@v4

        - name: setup go
          uses: actions/setup-go@v4
          with:
            go-version: 1.22
            cache: true

        - name: build artifact
          run: |
            cd src/product-catalog
            go mod download
            go build -o productcatalogservice main.go

    docker-build:
      runs-on: ubuntu-latest

      needs: build

      steps:
        - name: code-checkout
          uses: actions/checkout@v4

        - name: Initialize docker
          uses: docker/setup-buildx-action@v2

        - name: login to docker
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}

        - name: build and push image
          uses: docker/build-push-action@v6
          with:
            context: src/product-catalog
            file: src/product-catalog/Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKER_USERNAME }}/productcatalogservice:${{ github.run_id }}
        
    update-k8s:
      runs-on: ubuntu-latest

      needs: docker-build

      env:
        DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/productcatalogservice:${{ github.run_id }}
      steps:
        - name: code-checkout
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.REPO_TOKEN }}

        - name: Update image in k8s
          run: |
           echo "Updating image to: $(DOCKER_IMAGE)"
           sed -i "s|image: .*|image: $(DOCKER_IMAGE)|" kubernetes/productcatalog/deploy.yaml

        - name: commit and push changes
          run: |
            git config --local user.name "Godbless Biekro"
            git config --local user.email "biekrogodbless@gmail.com"
            git add kubernetes/productcatalog/deploy.yaml
            git commit -m "[CI] Update Kubernetes deployment"
            git push origin HEAD:main